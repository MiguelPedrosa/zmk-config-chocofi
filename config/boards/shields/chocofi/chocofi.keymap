/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define BASE 0
#define SYM 1
#define NUM 2
#define NAV 3

#define LEFT_KEYS 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 // left-hand keys
#define RIGHT_KEYS 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 // right-hand keys
#define THUMBS 30 31 32 33 34 35 // thumb keys

/ {
    behaviors {
        // HOME ROW MODS

        hml: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>; // double-tap + hold repeats tap-key
            #global-quick-tap = <150>;
            bindings =
                <&kp>,
                <&kp>;

            hold-trigger-key-positions = <RIGHT_KEYS THUMBS>;
            hold-trigger-on-release;
        };
        hmr: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>; // double-tap + hold repeats tap-key
            #global-quick-tap = <150>;
            bindings =
                <&kp>,
                <&kp>;

            hold-trigger-key-positions = <LEFT_KEYS THUMBS>;
            hold-trigger-on-release;
        };
    };
};


/ {
        keymap {
                compatible = "zmk,keymap";

            default_layer {
                bindings = <
&kp Q         &kp W        &kp E          &kp R          &kp T    &kp Y             &kp U           &kp I          &kp O         &kp P
&hml LGUI A   &hml LALT S  &hml LCTRL D   &hml LSHIFT F  &kp G    &kp H             &hmr RSHIFT J   &hmr RCTRL K   &hmr RALT L   &hmr RGUI SEMI
&kp Z         &kp X        &kp C          &kp V          &kp B    &kp N             &kp M           &kp COMMA      &kp DOT       &kp SLASH
                           &kp ESCAPE     &lt NAV SPACE  &kp TAB  &lt NUM KP_ENTER  &kp BACKSPACE   &lt SYM DEL
                >;
            };
            sym_layer {
                bindings = <
&kp RIGHT_BRACKET     &kp CARET        &kp LEFT_BRACE  &kp TILDE  &kp AT_SIGN       &kp MINUS  &kp Z                       &kp EQUAL                       &kp PLUS                      &kp SQT
&kp LEFT_PARENTHESIS  &kp EXCLAMATION  &kp Z           &kp HASH   &kp LEFT_BRACKET  &kp SLASH  &hmr RIGHT_SHIFT BACKSLASH  &hmr RIGHT_CONTROL RIGHT_BRACE  &hmr RIGHT_ALT RIGHT_BRACKET  &hmr RIGHT_WIN SEMICOLON
&kp Z                 &kp DOLLAR       &kp PERCENT     &kp PIPE   &none             &none      &none                       &kp GRAVE                       &kp Z                         &kp DOUBLE_QUOTES
                                       &kp Z           &kp Z      &kp ASTERISK      &none      &none                       &none
                >;
            };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |
// |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |
//             | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR
   &trans    &trans    &trans    &trans    &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp PIPE
   &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans          &trans   &kp BSLH
                       &kp LGUI  &trans    &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

// This layer is unreachable until "tri layer state" is sorted out.
// Leaving it here for completeness.
                num_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
   &trans &trans &trans &trans &trans    &kp A  &kp N7  &kp N8 &kp N9 &kp D
   &trans &trans &trans &trans &trans    &kp B  &kp N4  &kp N5 &kp N6 &kp E
   &trans &trans &trans &trans &trans    &kp C  &kp N1  &kp N2 &kp N3 &kp F
                 &trans &trans &trans    &kp N0 &kp DOT &trans
                        >;
                };
        };
};

