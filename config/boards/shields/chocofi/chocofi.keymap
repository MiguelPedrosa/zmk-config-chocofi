/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define BASE 0
#define SYM 1
#define NUM 2
#define NAV 3

#define LEFT_KEYS 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 // left-hand keys
#define RIGHT_KEYS 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 // right-hand keys
#define THUMBS 30 31 32 33 34 35 // thumb keys

/ {
    behaviors {
        // HOME ROW MODS

        hml: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>; // double-tap + hold repeats tap-key
            #global-quick-tap = <150>;
            bindings =
                <&kp>,
                <&kp>;

            hold-trigger-key-positions = <RIGHT_KEYS THUMBS>;
            hold-trigger-on-release;
        };
        hmr: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>; // double-tap + hold repeats tap-key
            #global-quick-tap = <150>;
            bindings =
                <&kp>,
                <&kp>;

            hold-trigger-key-positions = <LEFT_KEYS THUMBS>;
            hold-trigger-on-release;
        };
    };
};


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W        &kp E          &kp R          &kp T    &kp Y             &kp U           &kp I          &kp O         &kp P
&hml LGUI A   &hml LALT S  &hml LCTRL D   &hml LSHIFT F  &kp G    &kp H             &hmr RSHIFT J   &hmr RCTRL K   &hmr RALT L   &hmr RGUI SEMI
&kp Z         &kp X        &kp C          &kp V          &kp B    &kp N             &kp M           &kp COMMA      &kp DOT       &kp SLASH
                           &kp ESCAPE     &lt NAV SPACE  &kp TAB  &lt NUM KP_ENTER  &kp BACKSPACE   &lt SYM DEL
            >;
        };
        sym_layer {
            bindings = <
&kp RIGHT_BRACKET     &kp CARET        &kp LEFT_BRACE  &kp TILDE  &kp AT_SIGN       &kp MINUS  &kp Z                       &kp EQUAL                       &kp PLUS                      &kp SQT
&kp LEFT_PARENTHESIS  &kp EXCLAMATION  &kp Z           &kp HASH   &kp LEFT_BRACKET  &kp SLASH  &hmr RIGHT_SHIFT BACKSLASH  &hmr RIGHT_CONTROL RIGHT_BRACE  &hmr RIGHT_ALT RIGHT_BRACKET  &hmr RIGHT_WIN SEMICOLON
&kp Z                 &kp DOLLAR       &kp PERCENT     &kp PIPE   &none             &none      &none                       &kp GRAVE                       &kp Z                         &kp DOUBLE_QUOTES
                                       &kp Z           &kp Z      &kp ASTERISK      &none      &none                       &none
            >;
        };

        num_layer {
            bindings = <
&none                   &kp NUMBER_7            &kp NUMBER_8         &kp NUMBER_9              &none  &kp F12  &kp F9               &kp F8                 &kp F7        &none
&hml LEFT_WIN NUMBER_0  &hml LEFT_ALT NUMBER_1  &hml LCTRL NUMBER_2  &hml LEFT_SHIFT NUMBER_3  &none  &kp F11  &hmr RIGHT_SHIFT F3  &hmr RIGHT_CONTROL F2  &hmr RALT F1  &hmr RIGHT_GUI NUMBER_0
&none                   &kp NUMBER_4            &kp NUMBER_5         &kp NUMBER_6              &none  &kp F10  &kp F6               &kp F5                 &kp F4        &none
                                                &none                &none                     &none  &none    &none                &none
            >;
        };

        nav_layer {
            bindings = <
&out OUT_BLE  &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &kp HOME        &kp PAGE_DOWN  &kp PAGE_DOWN  &kp END    &none
&none         &none             &none             &none             &none             &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW   &kp RIGHT  &none
&out OUT_USB  &bt BT_CLR_CMD 0  &bt BT_CLR_CMD 1  &bt BT_CLR_CMD 2  &bt BT_CLR_CMD 3  &none           &none          &none          &none      &none
                                &none             &none             &none             &none           &none          &none
            >;
        };
    };
};

